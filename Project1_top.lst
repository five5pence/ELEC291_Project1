                  2   $LIST
0000              4   ;  N76E003 pinout:
0000              5   ;                               -------
0000              6   ;       PWM2/IC6/T0/AIN4/P0.5 -|1    20|- P0.4/AIN5/STADC/PWM3/IC3
0000              7   ;               TXD/AIN3/P0.6 -|2    19|- P0.3/PWM5/IC5/AIN6
0000              8   ;               RXD/AIN2/P0.7 -|3    18|- P0.2/ICPCK/OCDCK/RXD_1/[SCL]
0000              9   ;                    RST/P2.0 -|4    17|- P0.1/PWM4/IC4/MISO
0000             10   ;        INT0/OSCIN/AIN1/P3.0 -|5    16|- P0.0/PWM3/IC3/MOSI/T1
0000             11   ;              INT1/AIN0/P1.7 -|6    15|- P1.0/PWM2/IC2/SPCLK
0000             12   ;                         GND -|7    14|- P1.1/PWM1/IC1/AIN7/CLO
0000             13   ;[SDA]/TXD_1/ICPDA/OCDDA/P1.6 -|8    13|- P1.2/PWM0/IC0
0000             14   ;                         VDD -|9    12|- P1.3/SCL/[STADC]
0000             15   ;            PWM5/IC7/SS/P1.5 -|10   11|- P1.4/SDA/FB/PWM1
0000             16   ;                               -------
0000             17   ;
0000             18   ;  N76E003 pinout:
0000             19   ;                               ----
0000             20   ;                 (FREE) P0.5 -|1    20|- P0.4 (FREE)
0000             21   ;      Serial to COM TXD/P0.6 -|2    19|- P0.3 LCD.3
0000             22   ;      Serial to COM RXD/P0.7 -|3    18|- P0.2 LCD.2
0000             23   ;                    RST P2.0 -|4    17|- P0.1 LCD.1
0000             24   ;            LM335 INPUT P3.0 -|5    16|- P0.0 LCD.0
0000             25   ;       PUSHBUTTONS AIN0/P1.7 -|6    15|- P1.0 (FREE)
0000             26   ;                         GND -|7    14|- P1.1 THERMOCOUPLE INPUT
0000             27   ;         SPEAKER OUTPUT P1.6 -|8    13|- P1.2 OVEN CONTROL PIN
0000             28   ;                         VDD -|9    12|- P1.3 LCD RS
0000             29   ;                 (FREE) P1.5 -|10   11|- P1.4 LCD E
0000             30   ;                               -------
0000             31   ;
0000             32   CLK               EQU 16600000 ; Microcontroller system frequency in Hz
0000             33   BAUD              EQU 115200 ; Baud rate of UART in bps
0000             34   TIMER1_RELOAD     EQU (0x100-(CLK/(16*BAUD)))
0000             35   TIMER0_RELOAD_1MS EQU (0x10000-(CLK/1000))
0000             36   
0000             37   ORG 0x0000
0000 020486      38       ljmp main
0003             39   
0003             40   ; Initialization Messages
0003 4F3D2020    41   temperature_message:     db 'O=       J=     ', 0
     20202020
     204A3D20
     20202020
     00
0014             42   
0014 53746174    43   state0:     db 'State 0', 0
     65203000
001C 53746174    44   state1:     db 'State 1', 0
     65203100
0024 53746174    45   state2:     db 'State 2', 0
     65203200
002C 53746174    46   state3:     db 'State 3', 0
     65203300
0034 53746174    47   state4:     db 'State 4', 0
     65203400
003C 53746174    48   state5:     db 'State 5', 0
     65203500
0044             49   
0044             50   cseg
0044             51   
0044             52   ; SYMBOLIC CONSTANTS
0044             53   
0044             54   ; INPUTS
0044             55   tempsensor_in equ P3.0
0044             56   thermocouple_in equ P1.1
0044             57   
0044             58   ; OUTPUTS
0044             59   oven_out equ P1.2
0044             60   speaker_out equ P1.6
0044             61   
0044             62   ; LCD
0044             63   LCD_RS equ P1.3
0044             64   LCD_E equ P1.4
0044             65   LCD_D4 equ P0.0
0044             66   LCD_D5 equ P0.1
0044             67   LCD_D6 equ P0.2
0044             68   LCD_D7 equ P0.3
0044             69   
                 71   	$LIST
00F8             73   
00F8             74   ; These register definitions needed by 'math32.inc'
0030             75   DSEG at 30H
0030             76   x:   ds 4
0034             77   y:   ds 4
0038             78   amb_temp: ds 4 ; ambient temperature read by LM335
003C             79   bcd: ds 5
0041             80   
0041             81   DSEG
0041             82   pwm: ds 1
0042             83   state: ds 1
0043             84   temp_soak: ds 1
0044             85   Time_soak: ds 1
0045             86   Temp_refl: ds 1
0046             87   Time_refl: ds 1
0047             88   
0047             89   sec: ds 1
0048             90   temp: ds 1
0049             91   
0049             92   
0049             93   FSM1_state: ds 1
004A             94   
0000             95   BSEG
0000             96   mf: dbit 1
0001             97   
0001             98   ; These eight bit variables store the value of the pushbuttons after calling 'ADC_to_PB' below
0001             99   PB0: dbit 1
0002            100   PB1: dbit 1
0003            101   PB2: dbit 1
0004            102   PB3: dbit 1
0005            103   PB4: dbit 1
0006            104   PB5: dbit 1
0007            105   PB6: dbit 1
0008            106   PB7: dbit 1
0009            107   
0009            108   ; MATH32
                546   $LIST
                110   $LIST
0368            112   
0368            113   ; Blank Macro
                114   Left_blank mac
                115   	mov a, %0
                116   	anl a, #0xf0
                117   	swap a
                118   	jz Left_blank_%M_a
                119   	ljmp %1
                120   Left_blank_%M_a:
                121   	Display_char(#' ')
                122   	mov a, %0
                123   	anl a, #0x0f
                124   	jz Left_blank_%M_b
                125   	ljmp %1
                126   Left_blank_%M_b:
                127   	Display_char(#' ')
                128   endmac
0368            129   
0368            130   ; Formatting to display thermocouple temperature
0368            131   ; Display: 0000.00
0368            132   Display_formated_BCD_To:
0368 C000       133            push ar0
036A A83F       133            mov r0, bcd+3
036C 1200E2     133            lcall ?Display_BCD
036F D000       133            pop ar0
0371 C000       134            push ar0
0373 A83E       134            mov r0, bcd+2
0375 1200E2     134            lcall ?Display_BCD
0378 D000       134            pop ar0
037A C0E0       135            push acc
037C 742E       135            mov a, #'.'
037E 120093     135            lcall ?WriteData
0381 D0E0       135            pop acc
0383 C000       136            push ar0
0385 A83D       136            mov r0, bcd+1
0387 1200E2     136            lcall ?Display_BCD
038A D000       136            pop ar0
038C            137   
038C            138   
038C 22         139            ret
038D            140            
038D            141   ; Formatting to display ambient temperature
038D            142   ; Display: 00.00
038D            143   Display_formated_BCD_Tj:
038D C000       144            push ar0
038F A83E       144            mov r0, bcd+2
0391 1200E2     144            lcall ?Display_BCD
0394 D000       144            pop ar0
0396 C0E0       145            push acc
0398 742E       145            mov a, #'.'
039A 120093     145            lcall ?WriteData
039D D0E0       145            pop acc
039F C000       146            push ar0
03A1 A83D       146            mov r0, bcd+1
03A3 1200E2     146            lcall ?Display_BCD
03A6 D000       146            pop ar0
03A8 22         147            ret
03A9            148   
03A9            149   
03A9            150   ; INITIALIZATION SUBROUTINES
03A9            151   Init_All:
03A9            152            ; Configure all the pins for biderectional I/O
03A9 75AC00     153            mov     P3M1, #0x00
03AC 75AD00     154            mov     P3M2, #0x00
03AF 75B300     155            mov     P1M1, #0x00
03B2 75B400     156            mov     P1M2, #0x00
03B5 75B100     157            mov     P0M1, #0x00
03B8 75B200     158            mov     P0M2, #0x00
03BB            159   
03BB 438E10     160            orl     CKCON, #0x10 ; CLK is the input for timer 1
03BE 438780     161            orl     PCON, #0x80 ; Bit SMOD=1, double baud rate
03C1 759852     162            mov     SCON, #0x52
03C4 53C4DF     163            anl     T3CON, #0b11011111
03C7 53890F     164            anl     TMOD, #0x0F ; Clear the configuration bits for timer 1
03CA 438920     165            orl     TMOD, #0x20 ; Timer 1 Mode 2
03CD 758DF7     166            mov     TH1, #TIMER1_RELOAD ; TH1=TIMER1_RELOAD;
03D0 D28E       167            setb TR1
03D2            168            
03D2            169            ; Using timer 0 for delay functions.  Initialize here:
03D2 C28C       170            clr     TR0 ; Stop timer 0
03D4 438E08     171            orl     CKCON,#0x08 ; CLK is the input for timer 0
03D7 5389F0     172            anl     TMOD,#0xF0 ; Clear the configuration bits for timer 0
03DA 438901     173            orl     TMOD,#0x01 ; Timer 0 in Mode 1: 16-bit timer
03DD            174            
03DD            175            ; Initialize the pin used by the ADC (P1.1) as input.
03DD 43B302     176            orl     P1M1, #0b00000010
03E0 53B4FD     177            anl     P1M2, #0b11111101
03E3            178   
03E3            179            ; Initialize the pin used by the ADC (P3.0) as input.
03E3 43AC01     180            orl     P3M1, #0b00000001
03E6 53ADFE     181            anl     P3M2, #0b11111110
03E9            182            
03E9            183            ; Initialize and start the ADC:
03E9 53E8F0     184            anl ADCCON0, #0xF0
03EC 43E807     185            orl ADCCON0, #0x07 ; Select channel 7
03EF            186   
03EF 53E2F0     187            anl ADCCON2, #0xF0
03F2 43E201     188            orl ADCCON2, #0x01 ; Select channel 1
03F5            189   
03F5            190            ; AINDIDS select if some pins are analog inputs or digital I/O:
03F5 75F600     191            mov AINDIDS, #0x00 ; Disable all analog inputs
03F8 43F680     192            orl AINDIDS, #0b10000000 ; P1.1 is analog input
03FB 43F601     193            orl AINDIDS, #0b00000001 ; P3.0 is analog input
03FE 43E101     194            orl ADCCON1, #0x01 ; Enable ADC
0401            195            
0401 22         196            ret
0402            197   
0402            198   
0402            199   wait_1ms:
0402 C28C       200            clr     TR0 ; Stop timer 0
0404 C28D       201            clr     TF0 ; Clear overflow flag
0406 758CBF     202            mov     TH0, #high(TIMER0_RELOAD_1MS)
0409 758A28     203            mov     TL0,#low(TIMER0_RELOAD_1MS)
040C D28C       204            setb TR0
040E 308DFD     205            jnb     TF0, $ ; Wait for overflow
0411 22         206            ret
0412            207   
0412            208   ; Wait the number of miliseconds in R2
0412            209   waitms:
0412 120402     210            lcall wait_1ms
0415 DAFB       211            djnz R2, waitms
0417 22         212            ret
0418            213   
0418            214   ADC_to_PB:
0418 53E8F0     215            anl ADCCON0, #0xF0
041B 43E800     216            orl ADCCON0, #0x00 ; Select AIN0
041E            217            
041E C2EF       218            clr ADCF
0420 D2EE       219            setb ADCS   ; ADC start trigger signal
0422 30EFFD     220       jnb ADCF, $ ; Wait for conversion complete
0425            221   
0425 D208       222            setb PB7
0427 D207       223            setb PB6
0429 D206       224            setb PB5
042B D205       225            setb PB4
042D D204       226            setb PB3
042F D203       227            setb PB2
0431 D202       228            setb PB1
0433 D201       229            setb PB0
0435            230            
0435            231            ; Check PB7
0435            232   ADC_to_PB_L7:
0435 C3         233            clr c
0436 E5C3       234            mov a, ADCRH
0438 94F0       235            subb a, #0xf0
043A 4003       236            jc ADC_to_PB_L6
043C C208       237            clr PB7
043E 22         238            ret
043F            239   
043F            240            ; Check PB6
043F            241   ADC_to_PB_L6:
043F C3         242            clr c
0440 E5C3       243            mov a, ADCRH
0442 94D0       244            subb a, #0xd0
0444 4003       245            jc ADC_to_PB_L5
0446 C207       246            clr PB6
0448 22         247            ret
0449            248   
0449            249            ; Check PB5
0449            250   ADC_to_PB_L5:
0449 C3         251            clr c
044A E5C3       252            mov a, ADCRH
044C 94B0       253            subb a, #0xb0
044E 4003       254            jc ADC_to_PB_L4
0450 C206       255            clr PB5
0452 22         256            ret
0453            257   
0453            258            ; Check PB4
0453            259   ADC_to_PB_L4:
0453 C3         260            clr c
0454 E5C3       261            mov a, ADCRH
0456 9490       262            subb a, #0x90
0458 4003       263            jc ADC_to_PB_L3
045A C205       264            clr PB4
045C 22         265            ret
045D            266   
045D            267            ; Check PB3
045D            268   ADC_to_PB_L3:
045D C3         269            clr c
045E E5C3       270            mov a, ADCRH
0460 9470       271            subb a, #0x70
0462 4003       272            jc ADC_to_PB_L2
0464 C204       273            clr PB3
0466 22         274            ret
0467            275   
0467            276            ; Check PB2
0467            277   ADC_to_PB_L2:
0467 C3         278            clr c
0468 E5C3       279            mov a, ADCRH
046A 9450       280            subb a, #0x50
046C 4003       281            jc ADC_to_PB_L1
046E C203       282            clr PB2
0470 22         283            ret
0471            284   
0471            285            ; Check PB1
0471            286   ADC_to_PB_L1:
0471 C3         287            clr c
0472 E5C3       288            mov a, ADCRH
0474 9430       289            subb a, #0x30
0476 4003       290            jc ADC_to_PB_L0
0478 C202       291            clr PB1
047A 22         292            ret
047B            293   
047B            294            ; Check PB0
047B            295   ADC_to_PB_L0:
047B C3         296            clr c
047C E5C3       297            mov a, ADCRH
047E 9410       298            subb a, #0x10
0480 4003       299            jc ADC_to_PB_Done
0482 C201       300            clr PB0
0484 22         301            ret
0485            302            
0485            303   ADC_to_PB_Done:
0485            304            ; No puhsbutton pressed         
0485 22         305            ret
0486            306   
0486            307   ; MAIN 
0486            308   main:
0486 75817F     309            mov sp, #0x7f
0489 1203A9     310       lcall Init_All
048C 12009D     311       lcall LCD_4BIT
048F            312       ; initial messages in LCD
048F C0E0       313            push acc
0491 7401       313            mov a, #1
0493 14         313            dec a
0494 1200DD     313            lcall ?Set_Cursor_1 ; Select column and row
0497 D0E0       313            pop acc
0499 C083       314            push dph
049B C082       314            push dpl
049D C0E0       314            push acc
049F 900003     314            mov dptr, #temperature_message
04A2 1200D0     314            lcall ?Send_Constant_String
04A5 D0E0       314            pop acc
04A7 D082       314            pop dpl
04A9 D083       314            pop dph
04AB            315   
04AB 754900     316            mov FSM1_state, #0
04AE 754332     317       mov Temp_soak, #50
04B1 75443C     318            mov Time_soak, #60
04B4 7545DC     319            mov Temp_refl, #220
04B7 75462D     320            mov Time_refl, #45
04BA 754700     321            mov sec, #0
04BD            322   
04BD            323   Forever:
04BD 120418     324            lcall ADC_to_PB
04C0            325            ;lcall Display_PushButtons_ADC
04C0            326            
04C0 75E807     327            mov ADCCON0, #0x07 ; Select channel 7 (P1.1)
04C3 C2EF       328            clr ADCF
04C5 D2EE       329            setb ADCS ;  ADC start trigger signal
04C7 30EFFD     330       jnb ADCF, $ ; Wait for conversion complete
04CA            331       
04CA            332       ; Read the ADC result and store in [R1, R0]
04CA E5C3       333       mov a, ADCRH   
04CC C4         334       swap a
04CD C0E0       335       push acc
04CF 540F       336       anl a, #0x0f
04D1 F9         337       mov R1, a
04D2 D0E0       338       pop acc
04D4 54F0       339       anl a, #0xf0
04D6 45C2       340       orl a, ADCRL
04D8 F8         341       mov R0, A
04D9            342       
04D9 75E801     343       mov ADCCON0, #0x01 ; Select channel 1 (P3.0)
04DC C2EF       344            clr ADCF
04DE D2EE       345            setb ADCS ;  ADC start trigger signal
04E0 30EFFD     346       jnb ADCF, $ ; Wait for conversion complete
04E3            347       
04E3            348       ; Read the ADC result and store in [R4, R3]
04E3 E5C3       349       mov a, ADCRH   
04E5 C4         350       swap a
04E6 C0E0       351       push acc
04E8 540F       352       anl a, #0x0f
04EA FC         353       mov R4, a
04EB D0E0       354       pop acc
04ED 54F0       355       anl a, #0xf0
04EF 45C2       356       orl a, ADCRL
04F1 FB         357       mov R3, A
04F2            358       
04F2            359            ; Convert to LM335 temperature to voltage
04F2 8B30       360            mov x+0, R3
04F4 8C31       361            mov x+1, R4
04F6 753200     362            mov x+2, #0
04F9 753300     363            mov x+3, #0
04FC 75347C     364            mov y+0, #low (50300 % 0x10000) 
04FF 7535C4     364            mov y+1, #high(50300 % 0x10000) 
0502 753600     364            mov y+2, #low (50300 / 0x10000) 
0505 753700     364            mov y+3, #high(50300 / 0x10000)  ; VCC voltage measured
0508 120272     365            lcall mul32
050B 7534FF     366            mov y+0, #low (4095 % 0x10000) 
050E 75350F     366            mov y+1, #high(4095 % 0x10000) 
0511 753600     366            mov y+2, #low (4095 / 0x10000) 
0514 753700     366            mov y+3, #high(4095 / 0x10000)  ; 2^12-1
0517 1202FF     367            lcall div32
051A 7534D0     368            mov y+0, #low (27600 % 0x10000) 
051D 75356B     368            mov y+1, #high(27600 % 0x10000) 
0520 753600     368            mov y+2, #low (27600 / 0x10000) 
0523 753700     368            mov y+3, #high(27600 / 0x10000) 
0526 1201DE     369            lcall sub32
0529 753464     370            mov y+0, #low (100 % 0x10000) 
052C 753500     370            mov y+1, #high(100 % 0x10000) 
052F 753600     370            mov y+2, #low (100 / 0x10000) 
0532 753700     370            mov y+3, #high(100 / 0x10000) 
0535 120272     371            lcall mul32
0538            372            
0538            373            ; Convert to BCD and display
0538 1200F8     374            lcall hex2bcd
053B C0E0       375            push acc
053D 740C       375            mov a, #12
053F 14         375            dec a
0540 1200DD     375            lcall ?Set_Cursor_1 ; Select column and row
0543 D0E0       375            pop acc
0545 12038D     376            lcall Display_formated_BCD_Tj
0548            377   
0548            378            ; Convert value back to hex to use for calculations
0548 120181     379            lcall bcd2hex
054B            380   
054B            381            ; Storing the ambient temperature
054B 853038     382            mov amb_temp+0, x+0
054E 853139     383            mov amb_temp+1, x+1
0551 85323A     384            mov amb_temp+2, x+2
0554 85333B     385            mov amb_temp+3, x+3
0557            386   
0557            387            ; Convert to thermocouple voltage to temperature
0557 8830       388            mov x+0, R0
0559 8931       389            mov x+1, R1
055B 753200     390            mov x+2, #0
055E 753300     391            mov x+3, #0
0561 75347C     392            mov y+0, #low (50300 % 0x10000) 
0564 7535C4     392            mov y+1, #high(50300 % 0x10000) 
0567 753600     392            mov y+2, #low (50300 / 0x10000) 
056A 753700     392            mov y+3, #high(50300 / 0x10000)  ; VCC voltage measured
056D 120272     393            lcall mul32
0570 7534FF     394            mov y+0, #low (4095 % 0x10000) 
0573 75350F     394            mov y+1, #high(4095 % 0x10000) 
0576 753600     394            mov y+2, #low (4095 / 0x10000) 
0579 753700     394            mov y+3, #high(4095 / 0x10000)  ; 2^12-1
057C 1202FF     395            lcall div32
057F 753464     396            mov y+0, #low (100 % 0x10000) 
0582 753500     396            mov y+1, #high(100 % 0x10000) 
0585 753600     396            mov y+2, #low (100 / 0x10000) 
0588 753700     396            mov y+3, #high(100 / 0x10000) 
058B 1202FF     397            lcall div32
058E 753445     398            mov y+0, #low (5189 % 0x10000) 
0591 753514     398            mov y+1, #high(5189 % 0x10000) 
0594 753600     398            mov y+2, #low (5189 / 0x10000) 
0597 753700     398            mov y+3, #high(5189 / 0x10000) 
059A 120272     399            lcall mul32
059D            400   
059D            401            ; Adding the ambient temperature to oven temperature
059D 853834     402            mov y+0, amb_temp+0
05A0 853935     403            mov y+1, amb_temp+1
05A3 853A36     404            mov y+2, amb_temp+2
05A6 853B37     405            mov y+3, amb_temp+3
05A9 1201BD     406            lcall add32
05AC            407            
05AC            408            ; Convert to BCD and display
05AC 1200F8     409            lcall hex2bcd
05AF C0E0       410            push acc
05B1 7403       410            mov a, #3
05B3 14         410            dec a
05B4 1200DD     410            lcall ?Set_Cursor_1 ; Select column and row
05B7 D0E0       410            pop acc
05B9 120368     411            lcall Display_formated_BCD_To
05BC            412   
05BC            413            ; Storing the thermocouple temperature into var temp 
05BC 753410     414            mov y+0, #low (10000 % 0x10000) 
05BF 753527     414            mov y+1, #high(10000 % 0x10000) 
05C2 753600     414            mov y+2, #low (10000 / 0x10000) 
05C5 753700     414            mov y+3, #high(10000 / 0x10000) 
05C8 1202FF     415            lcall div32
05CB 853048     416            mov temp, x+0
05CE            417            
05CE            418            ; Wait 100 ms between readings
05CE 7A64       419            mov R2, #100
05D0 120412     420            lcall waitms
05D3            421            
05D3            422   ; STATE MACHINE  
05D3            423   FSM1:
05D3 E549       424            mov a, FSM1_state
05D5            425   
05D5            426   ; off state. Should go to state 1 when start button is pressed (Button 8 right now)
05D5            427   FSM1_state0:
05D5 B40028     428            cjne a, #0, FSM1_state1
05D8 C0E0       429            push acc
05DA 7405       429            mov a, #5
05DC 14         429            dec a
05DD 1200DB     429            lcall ?Set_Cursor_2 ; Select column and row
05E0 D0E0       429            pop acc
05E2 C083       430            push dph
05E4 C082       430            push dpl
05E6 C0E0       430            push acc
05E8 900014     430            mov dptr, #state0
05EB 1200D0     430            lcall ?Send_Constant_String
05EE D0E0       430            pop acc
05F0 D082       430            pop dpl
05F2 D083       430            pop dph
05F4 754100     431            mov pwm, #0
05F7 200103     432            jb PB0, FSM1_state0_done
05FA 754901     433            mov FSM1_state, #1
05FD            434   FSM1_state0_done:
05FD 0204BD     435            ljmp Forever
0600            436   
0600            437   ; pre-heat state. Should go to state two when temp reaches temp_soak     
0600            438   FSM1_state1:
0600 B40134     439            cjne a, #1, FSM1_state2
0603 C0E0       440            push acc
0605 7405       440            mov a, #5
0607 14         440            dec a
0608 1200DB     440            lcall ?Set_Cursor_2 ; Select column and row
060B D0E0       440            pop acc
060D C083       441            push dph
060F C082       441            push dpl
0611 C0E0       441            push acc
0613 90001C     441            mov dptr, #state1
0616 1200D0     441            lcall ?Send_Constant_String
0619 D0E0       441            pop acc
061B D082       441            pop dpl
061D D083       441            pop dph
061F            442            
061F C296       443            clr P1.6
0621            444            
0621 754164     445            mov pwm, #100
0624 754700     446            mov sec, #0
0627            447            
0627            448            ; These two lines are temporary. temp should be read from the thermocouple wire
0627 754332     449            mov temp_soak, #50
062A            450            ;mov temp, #15
062A            451            
062A E543       452            mov a, temp_soak
062C D3         453            setb c
062D 9548       454            subb a, temp
062F 5003       455            jnc FSM1_state1_done
0631 754902     456            mov FSM1_state, #2
0634            457   FSM1_state1_done:
0634 0204BD     458            ljmp Forever
0637            459   
0637            460   ; State 2
0637            461   FSM1_state2:
0637 D296       462            setb P1.6 ;speaker
0639 B4023A     463            cjne a, #2, FSM1_state3
063C C0E0       464            push acc
063E 7405       464            mov a, #5
0640 14         464            dec a
0641 1200DB     464            lcall ?Set_Cursor_2 ; Select column and row
0644 D0E0       464            pop acc
0646 C083       465            push dph
0648 C082       465            push dpl
064A C0E0       465            push acc
064C 900024     465            mov dptr, #state2
064F 1200D0     465            lcall ?Send_Constant_String
0652 D0E0       465            pop acc
0654 D082       465            pop dpl
0656 D083       465            pop dph
0658 754114     466            mov pwm, #20
065B            467            
065B E547       468            mov a, sec
065D 2401       469            add a, #1
065F F547       470            mov sec, a
0661            471   
0661 7A32       472            mov R2, #50
0663 120412     473            lcall waitms
0666            474   
0666 E544       475            mov a, Time_soak
0668 C3         476            clr c
0669 9547       477            subb a, sec
066B 5003       478            jnc FSM1_state2_done
066D 754903     479            mov FSM1_state, #3
0670            480   FSM1_state2_done:
0670 0204BD     481            ljmp Forever
0673            482   
0673            483   ;DELETE
0673            484   jump:
0673 0205D5     485   ljmp FSM1_state0         
0676            486   
0676            487   ;State 3
0676            488   FSM1_state3:
0676 B40332     489            cjne a, #3, FSM1_state4
0679 C0E0       490            push acc
067B 7405       490            mov a, #5
067D 14         490            dec a
067E 1200DB     490            lcall ?Set_Cursor_2 ; Select column and row
0681 D0E0       490            pop acc
0683 C083       491            push dph
0685 C082       491            push dpl
0687 C0E0       491            push acc
0689 90002C     491            mov dptr, #state3
068C 1200D0     491            lcall ?Send_Constant_String
068F D0E0       491            pop acc
0691 D082       491            pop dpl
0693 D083       491            pop dph
0695 754164     492            mov pwm, #100
0698 754700     493            mov sec, #0
069B            494            
069B 7548FA     495            mov temp, #250
069E            496            
069E E545       497            mov a, Temp_refl
06A0 C3         498            clr c
06A1 9548       499            subb a, temp
06A3 5003       500            jnc FSM1_state3_done
06A5 754904     501            mov FSM1_state, #4
06A8            502   FSM1_state3_done:
06A8 0204BD     503            ljmp Forever
06AB            504   
06AB            505   
06AB            506   ;State 4
06AB            507   FSM1_state4:
06AB B40437     508            cjne a, #4, FSM1_state5
06AE C0E0       509            push acc
06B0 7405       509            mov a, #5
06B2 14         509            dec a
06B3 1200DB     509            lcall ?Set_Cursor_2 ; Select column and row
06B6 D0E0       509            pop acc
06B8 C083       510            push dph
06BA C082       510            push dpl
06BC C0E0       510            push acc
06BE 900034     510            mov dptr, #state4
06C1 1200D0     510            lcall ?Send_Constant_String
06C4 D0E0       510            pop acc
06C6 D082       510            pop dpl
06C8 D083       510            pop dph
06CA 754114     511            mov pwm, #20
06CD            512            
06CD E547       513            mov a, sec
06CF 2401       514            add a, #1
06D1 F547       515            mov sec, a
06D3            516   
06D3 7A32       517            mov R2, #50
06D5 120412     518            lcall waitms
06D8            519            
06D8 E546       520            mov a, Time_refl
06DA C3         521            clr c
06DB 9547       522            subb a,sec
06DD 5003       523            jnc FSM1_state4_done
06DF 754905     524            mov FSM1_state, #5
06E2            525   FSM1_state4_done:
06E2 0204BD     526            ljmp Forever
06E5            527            
06E5            528   FSM1_state5:
06E5 B4058B     529            cjne a, #5, jump
06E8 C0E0       530            push acc
06EA 7405       530            mov a, #5
06EC 14         530            dec a
06ED 1200DB     530            lcall ?Set_Cursor_2 ; Select column and row
06F0 D0E0       530            pop acc
06F2 C083       531            push dph
06F4 C082       531            push dpl
06F6 C0E0       531            push acc
06F8 90003C     531            mov dptr, #state5
06FB 1200D0     531            lcall ?Send_Constant_String
06FE D0E0       531            pop acc
0700 D082       531            pop dpl
0702 D083       531            pop dph
0704 754100     532            mov pwm, #0
0707            533            
0707 754846     534            mov temp, #70
070A            535            
070A 743C       536            mov a, #60
070C C3         537            clr c
070D 9548       538            subb a, temp
070F 5003       539            jnc FSM1_state5_done
0711 754900     540            mov FSM1_state,#0
0714            541   FSM1_state5_done:
0714 0204BD     542            ljmp Forever
0717            543            
0717            544   
0717            545   
0717            546   ;Any additions to be checked
0717            547   EN
